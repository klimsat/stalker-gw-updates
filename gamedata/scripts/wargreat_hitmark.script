local ENABLED = axr_main.config:r_value("mm_options", "enable_hitmark", 1, true)
local SPEED = axr_main.config:r_value("mm_options", "hitmark_speed", 2, 1.5)
local SHIFT = axr_main.config:r_value("mm_options", "hitmark_shift", 2, 6.0)
local SHOW_TIME = axr_main.config:r_value("mm_options", "hitmark_show_time", 2, 250)
local SHOW_HEAD_TIME = axr_main.config:r_value("mm_options", "hitmark_show_head_time", 2, 100)

local hitmark_tbl = {}
local last_hit_time = 0
local last_head_hit_time = 0
local pos_shift = 0

local function opt_menu_on_accepted()
  ENABLED = axr_main.config:r_value("mm_options", "enable_hitmark", 1, true)
  SPEED = axr_main.config:r_value("mm_options", "hitmark_speed", 2, 1.5)
  SHIFT = axr_main.config:r_value("mm_options", "hitmark_shift", 2, 6.0)
  SHOW_TIME = axr_main.config:r_value("mm_options", "hitmark_show_time", 2, 250)
  SHOW_HEAD_TIME = axr_main.config:r_value("mm_options", "hitmark_show_head_time", 2, 100)
end

local function remove_hitmark()
  local hud = get_hud()
  for i = 1, 4 do
    local hitmark = hitmark_tbl[i]
    if hitmark ~= nil then
      hud:RemoveCustomStatic("hud_hitmark_" .. i)
      hud:RemoveCustomStatic("hud_hitmark_" .. i .. "_head")
      hitmark_tbl[i] = nil
    end
  end
  pos_shift = 0
end

local function add_hitmark(msec)
  if ENABLED then
    remove_hitmark()
    last_hit_time = time_global() + msec
  end
end

local function actor_on_update()
  if time_global() <= last_hit_time then
    if pos_shift <= SHIFT then
      for i = 1, 4 do
        local hitmark = hitmark_tbl[i]
        local sHead = ""

        if time_global() <= last_head_hit_time then
          sHead = "_head"
        end

        if hitmark == nil then
          hitmark = get_hud():AddCustomStatic("hud_hitmark_" .. i .. sHead, true)
          hitmark_tbl[i] = hitmark
        end

        local vec1 = hitmark:wnd():GetWndPos()

        if i == 1 then
          vec1.x = vec1.x - SPEED
          vec1.y = vec1.y - SPEED
        elseif i == 2 then
          vec1.x = vec1.x + SPEED
          vec1.y = vec1.y - SPEED
        elseif i == 3 then
          vec1.x = vec1.x + SPEED
          vec1.y = vec1.y + SPEED
        else
          vec1.x = vec1.x - SPEED
          vec1.y = vec1.y + SPEED
        end

        hitmark:wnd():SetWndPos(vec1)
      end
      pos_shift = pos_shift + 1
    end
  else
    remove_hitmark()
  end
end

local function npc_on_hit_callback(obj, amount, local_direction, who, bone_index)
  if amount > 0 then
    if who ~= nil and who:id() == db.actor:id() then
      local bidx = tonumber(bone_index)
      if bidx ~= nil and bidx >= 14 and bidx <= 19 then
        last_head_hit_time = time_global() + SHOW_HEAD_TIME
      end

      add_hitmark(SHOW_TIME)
    end
  end
end

function on_game_start()
  RegisterScriptCallback("npc_on_hit_callback", npc_on_hit_callback)
  RegisterScriptCallback("monster_on_hit_callback", npc_on_hit_callback)
  RegisterScriptCallback("actor_on_update", actor_on_update)
  RegisterScriptCallback("opt_menu_on_accepted", opt_menu_on_accepted)
end
