--[[ more safely release and destroy squad NPC by switching it offline first
	author: Alundaio
	
	I don't know why but for some unknown amount of frames after se_obj releases, object binder still exists. Can lead to undefined behavior where server object is nil but game object isn't.
	This is my solution: switch the object offline to force a net_destroy, then release. Maybe the reason is the excessive usage of level.object_by_id(id) instead of level.object_by_id(id)???
	
	Also, this appears to be a safe way to release online_offline_group (squad) objects.
--]]
local timer = nil
emptyIds = nil
objects_to_release = {}
objects_to_release_now = {}
---------------------------------------------------------------
-- register object to be released safely
function release(se_obj)
  objects_to_release[se_obj.id] = se_obj:name()
end

function release_now(se_obj)
  objects_to_release_now[se_obj.id] = se_obj:name()
  objects_to_release[se_obj.id] = se_obj:name()
end

---------------------------------------------------------------
function execute_destroy_callback()
  if timer and timer:diffSec(game.get_game_time()) > -500 then
    return
  end

  utils.debug("Start execute_destroy_callback 1: %s", timer and timer:diffSec(game.get_game_time()))

  timer = game.get_game_time()

  if not is_empty(objects_to_release) then
    local sim = alife()
    for id, name in pairs(objects_to_release) do
      local se_obj = alife_object(id)
      if se_obj and se_obj:name() == name then
        local dist = sim:actor().position:distance_to_sqr(se_obj.position)
        local npc_level_id =
          se_obj and se_obj.m_game_vertex_id and game_graph():vertex(se_obj.m_game_vertex_id):level_id()
        local current_level = game_graph():vertex(sim:actor().m_game_vertex_id):level_id()

        if dist > SWITCH_REMOVE_DIST then
          if se_obj.online then
            -- prevent from coming online ever again
            sim:set_switch_online(id, false)
            sim:set_switch_offline(id, true)
            -- force offline
            se_obj:switch_offline()
          else
            alife_release(se_obj)
            objects_to_release[id] = nil
            db.del_stalker_by_id(id)

            if db.storage[id] and db.storage[id].object then
              db.storage[id].object = nil
            end
          end
        end
      else
        objects_to_release[id] = nil
      end
    end
  end
  return false
end
---------------------------------------------------------------
local function actor_on_reinit(binder)
  AddUniqueCall(execute_destroy_callback)
end

local function save_state(m_data)
  m_data.objects_to_release = objects_to_release

  emptyIds = utils.releaseDeadNPCsAndReturnEmptyIds()
end

local function load_state(m_data)
  objects_to_release = m_data.objects_to_release or objects_to_release
  m_data.objects_to_release = nil

  emptyIds = utils.releaseDeadNPCsAndReturnEmptyIds()
end
----------------------------------------------------------------
-- ON_GAME_START
----------------------------------------------------------------
function on_game_start()
  RegisterScriptCallback("actor_on_reinit", actor_on_reinit)
  RegisterScriptCallback("save_state", save_state)
  RegisterScriptCallback("load_state", load_state)
end
